The number 135 is particularly special in that if you take each digit, from left to right, and you put them to the consecutive power.

135 = 1^1 + 3^2 + 5^3
89 = 8^1 + 9^2

Write a function sumDigitPower that takes in a starting number, and an ending number, and check every number in that range inclusive (including a, and b) for this property. a will be greater than or equal to 0. Return all these numbers in this range which satisfies this property as an array.


function sumDigPower (a, b) {
  const arr = [];
  function check(n) {
    let str = n.toString();
    let ans = 0;
    for (let i = 0; i < str.length; i++) {
      ans += Math.pow(str[i], i + 1);
    }
    return ans === n;
  }
  for (let i = a; i <= b; i++) {
    if (check(i)) arr.push(i);
  }
  return arr;
}